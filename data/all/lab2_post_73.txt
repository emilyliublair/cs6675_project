Question: 
    Non-Present Page QuestionI am trying to figure out what to do when dealing with a page thats not present, would I just kill the process, or am I supposed to go into memory and put it into a page frame? How would I go about doing that if thats the case?lab2

    Student Answer: 
    

    Instructor Answer: 
    

    Followup Discussions:
    @213_f1Rohan Natansh Bafna2 months agoPinned this because errors like these are pretty common.Don’t waste submissions by resubmitting if you get an autograder; we can rerun the autograder for you.good comment1Tianyi Yu2 months agoRohan... Help...0Tianyi Yu2 months agoNever mind, I fixed something in my code so that it doesn’t timeout anymore.0Anonymous Scale2 months agoHi what did you do when this happened. I tried submitting code I already submitted that ran properly and I'm still getting this issue.0Tianyi Yu2 months agoIf you have too many hard faults it may still timeout the autograder. Make sure you’re killing misbehaving user processes so that you don’t hard fault.0Anonymous Scale2 months agoIs this for the failed to execute or the timeout problem? I'm also wondering if the autograder ever got changed because my code was working and I tried to resubmit the same code again to test and im still getting the failed to execute error.0Tianyi Yu2 months agoGradescope kills the autograder if it takes too much time to run. If you have fewer than 5 hardfaults you should be able to run without trouble. I don’t know why resubmitting the same code caused it to fail, but I’m guessing maybe it’s because of non-deterministic behaviors in your code.0Anonymous Scale2 months agoYea, I think there's another problem on my end since i didn't get the timeout message just the failed to execute. I've asked the TAs still waiting on a response and I can't make OH today so hopefully it gets answered soon.0Tianyi Yu2 months agoI think the timeout message doesn’t exist anymore since the TA moved the time limit from 600 seconds to something higher. But the issue should still be a timeout0Anonymous Scale2 months agoOh okay, do you have any ideas on where I can start to debug this. Everything runs properly on my end including the usertests.0Tianyi Yu2 months agoWrite a user test case like this:Fork a child processhave the child process access kernel memory (KERNBASE)print something outexitfork another childhave that child access unmapped memoryprint somethingexitYou should not see anything printed out.also check if you are handling stack overflows properly. If your guard page is mapped to the zero page and a page fault occurs on that page making sure you’re killing the process instead of handing the process a fresh new page.also check that if your kalloc fails when you are giving out new pages you are killing the processthese are the four things I can think of. Good luck!1Tianyi Yu2 months agoAlso check syscalls such as pipe and read still works since they are writing to user pages and need to be handled specially in your kernel.1Anonymous Scale2 months agoThanks, I'll try these!0
    