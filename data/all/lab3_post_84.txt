Question: 
    Advice on Thread Error/Security Test Cases 27-30If you are stuck on the Thread Error/Security test cases 27-30, here is some advice. I was in OH and learned that these cases are somewhat mislabeled. They are more related to ensuring thread group consistency when doing filesystem operations, e.g. changing the current working directory or opening/closing a file descriptor.lab3

    Student Answer: 
    Edited due to inaccuracies. Trap 13 is aGeneral Protection Exception (#GP). Page fault is interrupt 14.A lot of things can cause trap 13, as detailed in the SDM Volume 3, Chapter 7, Section 15. Youâ€™ll also find an explanation of how the error code works in said chapter. In general (for future references) I would set a breakpoint at the instruction in the user space program that generated the interrupt, and go from there.Previous answer:Trap 13 is a page fault, so I think it is probably related to an issue with the page tables or page directories.

    Instructor Answer: 
    

    Followup Discussions:
    @460_f1Shourik Banerjee1 month agoIs there a reason it only occurs on the first instruction?0Shourik Banerjee1 month agoAnother thing: is it an issue if I malloc 6000 bytes of space but clone will fail if the stacksize I pass is more than 5999?0Tanush Prathi1 month agoYou panic on the first instruction (probably because the pages are not setup correctly), so it can only occur on the first instruction0Tanush Prathi1 month agoThe clone should succeed if you malloc 6000 bytes and passed in 6000 as stack size.For any stack size higher, it should only fail if the memory beyond that is not allocated to the user program (ex: not present page). The kernel has no idea about the array boundaries, so if user passes a stack size that is larger than the allocated space, then it will just overflow into the same program's memory0Shourik Banerjee1 month agoHmm, interesting that there's a page issue considering I only free it in wait if the thread owner tries to free the page.0Shourik Banerjee4 weeks ago: I wasn't assigning the index to the table in fork properly, I was trying to access the table before setting the index.1
    