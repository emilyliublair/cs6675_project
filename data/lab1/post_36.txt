Question: 
    

    Student Answer: 
    

    Instructor Answer: 
    Changing the mode of execution can't easily be undone, but nothing about the jumps is "non-returnable". The BIOS still exists when you call the bootloader, and the bootloader still exists when you run the kernel. The BIOS won't be overwritten (it's memory mapped to a ROM chip), but eventually when the kernel runs it'll probably overwrite the bootloader (although since the bootloader runs in low memory, I doubt this happens in xv6).In particular, in the part of the bootloader that runs in real mode, nothing is stopping you from jumping back into the BIOS if you wanted. Although, the typical mechanism to make a BIOS call is to use an interrupt,which is exactly what do_e820 does if you check the disassembly. The BIOS has set up the interrupt vector table to point execution back to the BIOS when an interrupt happens, and one of these vectors is used by bootloaders to call back into the BIOS. (In fact, the BIOS's original purpose was to act as a sort of manufacturer-provided library so that OSs like DOS could portably perform I/O tasks across different types of machines; this is where the name Basic Input/Output System comes from.)

    Followup Discussions:
    @93_f1Andrew Boeger2 months agoAwesome, thank you for the detailed response!0
    