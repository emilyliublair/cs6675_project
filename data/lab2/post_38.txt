Question: 
    Failing test 7 onlyI am only failing test 7 - everything else passes on the autograder. Does anyone have any clue as to what I could be missing?Edge cases handled:reference countingflags (present, user, writable, etc.)valid memory allocationcopy on write/zero pageI'm pretty sure (95%) that I have an issue with one or more of these edge cases. Any help would be appreciated!lab2

    Student Answer: 
    

    Instructor Answer: 
    Quick follow-up from OH – check theorderingof your deallocuvm parameters in growproc

    Followup Discussions:
    @268_f1Anonymous Atom1 month agoIt still seems to not be passing case 7 after fixing it;;; - in usertests I'm not passing opentest and exectest which is confusing because it keeps failing before I get to any of the modified functionality (I used gdb).-- It fails at the screenshotted code, which is unchanged from the original lab2 code in the github------ specifically at namei(path) = 0, in both open() and exec()).if((ip = namei(path)) == 0){
    end_op();
    cprintf("exec: fail\n");
    return -1;
}
ilock(ip);
pgdir = 0;0Varun Mehrotra1 month agoIt sounds like an OOM issue in that case/issue with deallocating memory. I would suggesting ditching usertests for now and writing a simple test program that tests deallocation of memory. For example, forking just once, allocating and deallocating memory via sbrk, and checking if the process size is correct after deallocation via sbrk(0).good comment0Varun Mehrotra1 month ago^ Basically something similar to the sbrk test, but start small and build up your test until you can find an issue.good comment0Varun Mehrotra1 month agoTook a quick look at your deallocuvm again, one thing I don’t see is where you update reference counts for a page that is deallocated by a process, regardless of whether that page should be freed (i.e. if a process deallocates a page with reference count > 1, then the reference counter should be updated to reflect that, regardless of whether that page is freed or not)good comment1Anonymous Atom1 month agoNot sure if this will help anyone after, but besides fixing things that the TA helped with,If you are having problems with usertests.c, specifically with open/exec and it tries to open a file like echo.c or somethingmake sure it is in the Sources.cmake.**this did not fix our issues with test 7, just with usertests.c2Anonymous Comp1 month agoWe had deallocation of memory errors that were causing us to fail test 7.0Anonymous Helix1 month agoAny chance you could give a bit more detail? I feel like we are handling deallocing correctly, but we definetly think we are making some small mistake.0Anonymous Comp1 month agoRun mem test in user test with like pipe test or smth after it. Does pipe test fail? Does it pass if you don’t run mem test? Basically are you deallocating memory when a process is killed.1Anonymous Helix1 month agoOur mem test doesn't say that it fails. It just gets killed. Thats definetly part of our issue! Thanks!0Anonymous Helix1 month agoWait shouldn't the mem test fail with the COW implmeneted since we shouldn't hit a limit on our number of pages.0Anonymous Atom1 month agoNot sure if anyone will ever keep up with this thread, but we passed test case 7 after completely redoing how we did the reference counting. It turns out we did it a very jank way, and overall the simpler the code the better.Some tips:The mem() test given in usertests will run forever. Specifically the first while loop will run forever if you zero page correctly (which will cause you to time out). Either cap it somehow or just don't run the test -- preempt() also had an issue that we realized wasn't an "us" problem.If your code is really confusing, try and redo it to be less convoluted. Once we realized what the problem was our code size was reduced by like 30%. Also makes debugging easier.Gdb is your friend, but so are print statements. We had so many print statements in trap that helped us debug without ever needing gdb.0Anonymous Gear1 month agoI am currently failing test cases 2,3,4,8,9,10, do you have any advice for what you did to figure out what was wrong with these cases?0Anonymous Atom1 month agoWithout any proper details I can only list the basic things:1. Comment out any lazy-zero code and run the forktest-xv6-qemu test (compare with forktest_expected_cow.out file) -> we passed 10-13 with just part 1 done.2. If COW is ok, do forktest-xv6-qemu again (with lazy-zero) and make sure it matches forktest_expected_complete.out **you will probably still fail some autograder but it should be more3. Run usertests. This is also where we added our personal test cases. Also add your own tests.4. If all of those look ok, you probably have a lurking print statement --nothingshould be printed that isn't their given lab2_ag prints.0
    