Question: 
    ialloc: no inodes when attempting to run usertests after lazy zero implementationI am able to get the expected output from running./forktest-xv6-qemuand I am passing two autograder tests, but when I attempt to runusertestswhich first callsopen("usertests.ran", 0)I am getting aialloc: no inodespanic.usertestsis the first thing I am running after booting up xv6 so I should have a bunch of free inodes. I was able to pass all tests (execpt formem()andpreempt()) before implementing lazy zero page.lab2

    Student Answer: 
    Resolved - root cause seems to be running out of memory

    Instructor Answer: 
    

    Followup Discussions:
    @261_f1Anonymous Helix1 month agojust out of curiosity, which two tests were you passing?0Anonymous Atom1 month ago1 and 5. Wasn't able to pass more test cases after fixing this problem though.Any tips on how to pass 2-4 and 6-8?0Anonymous Helix1 month agoI don't remember what correlates with what but I remember killing process's for when things shouldn't be happening (i.e. faults on reads, if the PDE doesn't have it's present bit, etc.). Really just think about your error handling. and in allocuvm, think about what should be mapped to the zero page and what should be just allocated right away if you haven't already. making sure usertests still passed (other than mem() and preempt()) after implementing COW and lazy zero helped us with some other test cases also.1Tianyi Yu1 month agoI think I passed 9-13 after fixing what you were talking about… 2-4 and 6-8 seem to be more about just regular cases. I know for sure that 9 is testing sbrking until kalloc can’t spit out any more memory (cuz I happened to forget to release the lock upon kalloc fail and I only failed #9)1Ranjani Rajeswari Koushik1 month agoCan you expand on what particular situation where in allocuvm you would create a new page immedietly rather than map it?0Tianyi Yu1 month agoData/text page and user stack pages only. These should be allocated in exec.c3Anonymous Helix1 month agoyes my bad, you would think about it in exec.c.i worded that incorrectly in my original response3Ranjani Rajeswari Koushik1 month agosolved my problem, thanks!2Tianyi Yu1 month agoniiiiice!0Shourik Banerjee1 month agoCan you explain what you mean with error handling with reads? I'm pretty sure mine is breaking on the read in fourfiles in user.c0Anonymous Helix1 month agoI just meant that you kill the process if the page fault happens because of a read0Shourik Banerjee1 month agoWhat are you supposed to do if you page fault because of a read? My understanding was we kill it if it's not a write.0Anonymous Helix1 month agoYes I believe you're right. We kill if it's not a write0Shourik Banerjee1 month agoHmm, my code seems to fail on this line of fourfiles (around line 566 of usertests.c)while((n = read(fd, buf, sizeof(buf))) > 0){So I'm pretty sure it's an issue with the read, but I can't figure out what, because it gives me the unexpected trap 14 panic.0
    