Question: 
    Sbrk and mallocI've noticed that calling malloc in a user space program will immediately try and write to that page and therefore cause a page fault and page zero. Is it ok for this to happen or should malloc still point to the zero page until the user tries to write to it?lab2

    Student Answer: 
    Nvm, I looked at Mallocs code and it seems like correct behavior.

    Instructor Answer: 
    

    Followup Discussions:
    @228_f1Anonymous Gear2 months agoAlso this isn't super related but how do you change the number of CPUs that xv6 emulates so that I can test for concurrency issues?0Anonymous Mouse2 months agonot sure if this may help but you could look at NCPU from param.h0Rohan Natansh Bafna2 months agoI wouldn’t encourage testing this way as concurrency issues are fundamentally undeterministic; testing will never ensure that you do not have a concurrency issue. I recommend going through the code manually and trying to prove, mathematically, that your code will be data race free. (This is hard, but you will get (or should have gotten) practice in lecture working through concurrent code, and we’ll have something to help you with that in supervised lab soon :) )But if you do want to test in practice, you will need to copy the xv6-qemu script from the lab3 branch of the repo, and replacescripts/xv6-qemuwith it. Then pass the flag-c <n>toxv6-qemuto run withncpus, e.g., to run with 4 cpus, run./xv6-qemu -c 4.good comment0
    