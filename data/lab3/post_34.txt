Question: 
    Failing tests 29 and 31Title - I'm especially curious about why I'm failing 29 (and not 27/28/30), since I haven't heard of anyone else failing specifically that case and not any other thread error/security tests.My current approach is to replace all references to shared resources in the proc struct (pgdir, sz, ofile, cwd) throughout the codebase with references to those resources in the thread group owner, so that the owner serves as a single source of truth for their values. I have replaced all instances of p->pgdir with p->owner->pgdir, p->sz with p->owner->sz and so on. Has anyone else successfully used this method? Are there any nuances I could be missing?I've written (and am passing) test cases checking for propagation of all these shared resources across threads in the same group, so I'm confused about where the issue lies.lab3

    Student Answer: 
    

    Instructor Answer: 
    

    Followup Discussions:
    @553_f1Sebastian Tyler Morgenstern5 days agoI'm in a similar situation; failing 28-32 which are thread addr space and error/security1Sebastian Tyler Morgenstern5 days agoI fixed it so now I only get a race on test case 17, and fail test case 31. I think the way I was locking before a file interrupt caused a deadlock, but when I tried to switch to sleeplocks a lot of things didn't do so hot.0@553_f2Anonymous Poet5 days agoWe are also in a similar situation with failing 29, if you get any insight please let us know and we will be sure to do the same if we find anything out!0Yash Vardhan5 days agoI'm also only failing 29, did you figure anything out0Anonymous Poet5 days agonot yet no, will reply if i find anything0Anonymous Calc5 days agoAll I can say so far is that changing my approach to manually propagate the shared resources (instead of always referencing the owner) didn't work, I'm still failing 29. Will keep you updated if I find anything0Yash Vardhan5 days agoYep same0Anonymous Beaker4 days agoSame... ensured that threads do not maintain their own copies but instead access shared resources. Not hardfaulting, but just have incorrect outputs0
    