Question: 
    Clone restarting OS (xv6)I am running into an issue with clone where it restarts the OS (xv6) after I call it. I've gdb'd through clone and it all looks normal (as far as I can reasonably tell - something is definitely wrong, though). Did anyone else run into this issue?Some quick info:I call clone through the system call I made in user spaceThe arguments for the system call are being passed through correctlyClone completely executes, and the file where I call clone() (I just commented everything out in main() of workload and added the clone test) also completely executes.Ex: main() { [clone test] printf(1, "test complete") ... exit()} prints "test complete" - indicating that clone finished executing.I call clone the same way fork is called (plus the arguments needed for the stack pointer and size)When I say "restarts the OS", I mean that I briefly see my print statement ("test complete") show up, and then it clears with the Booting from hard disk..xv6... and all that with the blank shell. I can then run anything from shell and it all is as expected (with running the file with clone re-restarting the OS every time as well). It is exactly as if I just ran ./xv6-qemu.lab3

    Student Answer: 
    

    Instructor Answer: 
    What you’re looking at is a triple fault, a type of catastrophic failure where the CPU undergoes an interrupt, then faults when trying to handle that interrupt, then faults again, and at that point it just resets the whole computer to the beginning of the BIOS because something is seriously wrong.It looks like this is happening when or after exit() is called. Here’s my best guess as to what might be happening: if you call wait() in the parent, and in doing so free the child’s page directory, that page directory is the current page directory because you are currently in the parent thread’s context and it shares its pgdir with the child. Kfree overwrites the pgdir with junk, somewhere along the way CR3 is reloaded or a TLB miss happens, and the OS gets an interrupt, can’t run the trap handler because the pgdir is filled with junk, then page faults twice more, giving the triple fault. You should make sure you never clean up after a thread that is not a thread group owner, as if it’s a child thread, then other threads are still using those resources.(Thank you for providing so many details in your question btw. Hopefully I was right and this helps!)

    Followup Discussions:
    @397_f1Anonymous Beaker3 weeks agoYep that was it; added one line and now passing all except 2 tests - thanks!0Shourik Banerjee3 weeks agoI am having the same issue, did you have to modify wait?0
    