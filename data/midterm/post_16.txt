Question: 
    

    Student Answer: 
    

    Instructor Answer: 
    The inode pointer design space revolves around the mix of file sizes which are expected to be in the filesystem. In this question, you’re told that all of the files are large. Therefore, having the typical imbalanced tree (direct, indirect, doubly indirect, etc.) doesn’t make sense because you can instead just use much larger inodes with enough singly direct pointers. This is preferrable because you don’t waste disk space for the indirection disk blocks (which would be needed for the indirect, doubly indirect, etc.), and also disk reads will have better performance because all data blocks are one hop away from the inode. This design would be bad if the files were of varying sizes (like a typical system) because most of the direct pointers would be unused for small and medium size files.The main point is that the imbalanced tree design is good when you have a variety of file sizes because when the file is small, only the direct pointers will be used (and disk reads will be fast), but it also allows for the possibility of growing the files to larger sizes at which point the indirect, double indirect, etc. pointers are used on demand, allowing the inode metadata grow with the size of the file.

    Followup Discussions:
    @724_f1Rohit Hari3 days agoAs a follow up, if the vast majority of files are around 1TB, then why wouldn't we use a very large block size (mabey 1 GB) and allow a very large number of direct pointers. The amount of space used for the inodes is dwarfed by the space on disk for the actual files.1Anonymous Atom2 days agoMy only thought could be about facilitating multiple write accesses to different parts of the file simultaneously. If this isn't the case, then I'm wondering the same thing.0@724_f2Anonymous Mouse2 days agoBased on your answer, it seems you've just argued for the use of all singly direct pointers within one very large inode struct. So, why is the answer "A combination of doubly and triply indirect"? Is this the answer assuming we could NOT increase the size of our inode struct?0Aidan J Parsa2 days agoThe wrong answer is marked on Canvas.good comment0Anonymous Atom2 days agoCan you go into this a bit, I want to make sure I fully understand. For each correct answer, whats the argument for it being a correct answer?0@724_f3Anonymous Atom2 days agoCan you go into this a bit, I want to make sure I fully understand. For each correct answer, whats the argument for it being a correct answer?0
    