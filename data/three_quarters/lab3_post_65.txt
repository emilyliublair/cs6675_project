Question: 
    Part 3 Test Case 25I am currently failing test case 25. Passing test cases 1-24 and 26-30. I have written test cases to check if thread create correctly calls and executes the passed in function. I also check if the function address is in user space and not null. I also have test cases to check that calling thread create in thread create works. In thread create I malloc a page for stack and if malloc fails I return -1, otherwise I call clone. If clone fails I return -1 otherwise I return the new pid. If clone fails I free the stack. I have also checked that changes to shared resources are propagated through all threads (pretty sure this is covered by 27-30 anyway). In thread wait I check that the pid is positive and then return pid if waitpid is successful and -1 otherwise. I am not sure what other things to check for as basic functionality seems okay.lab3

    Student Answer: 
    

    Instructor Answer: 
    

    Followup Discussions:
    @496_f1Anonymous Comp4 weeks agoWhat is the expected behavior for this case? I ran it where parent creates a clone, then the clone creates a clone and if that clone's pid == 0, then it will return. The result is that it just never goes into the code it was supposed to execute otherwise which I believe is expected?0Killian Patrick Vetter4 weeks agoreturn from clone should act exactly as the parent returning. It should continue from the line after the function call0Anonymous Comp4 weeks agoIssue turned out to be incorrect behavior in wait, which I didn't use in my test cases as I used waitpid for that instead.0Anonymous Gear3 weeks agoI think I'm having a similar problem, I'm not sure though and any guidance would be appreciated!Whenever my clone runs, I set eax for the new proc's trapframe to be 0. However, in my test cases, I never see the return value being 0 (it never enters my if statement for the child case). Is this kinda similar to what your problem was and if so how did you fix it. I'm only failing case 12.0Anonymous Comp3 weeks agoUnfortunately I never faced that issue as my clone functionality was fine but I was cleaning up processes incorrectly in wait. I thought that it had to be the TG owner to be handled, but only the freeing of the pgdir is required by the TG owner.I would try stepping through in gdb to see where the value gets lost.0@496_f2Anonymous Scale3 weeks agoWere you able to pass 17? if so, what did you change?0Anonymous Comp3 weeks agoIt turns out my wait function was broken since I accidentally added something regarding thread group owners that I shouldn't have in a spot that was not appropriate.1
    