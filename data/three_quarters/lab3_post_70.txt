Question: 
    Autograder testing for concurrent access to shared resources in thread groupThis is a question about test cases/handgrading.There were some earlier posts signaling that Test #31 Thread Address Space has to do with current access to shared thread resources, i.e., we need to be using locks for access to a thread group's cwd, pgdir, ofile, sz, etc.I've been able to pass all of the test cases (100%) without locking around those shared resources. Is this something that's going to be checked in the hand grading?Also any tips on implementing those per-thread-group spinlocks for concurrent shared thread group resources (@345_f1).Thank you!lab3

    Student Answer: 
    

    Instructor Answer: 
    Youâ€™re not missing anything :) that is all thread_wait needs to do

    Followup Discussions:
    @485_f1Joshua Patrick Forden4 weeks agoYou also need to sanitize that the pid is positive and return the joined thread's pid.Basically a syscall wrapper for waitpid() but it seems to make the userspace threading library we're implementing more coherent overall.1Anonymous Mouse4 weeks agoi did the pid sanitization in sys_waitpid so yeah its a pretty empty function i guess.1Anonymous Calc4 weeks agoWhen they say return the joined thread's pid, is that the thread that is waiting or the thread that has completed.0@485_f2Shourik Banerjee4 weeks agoI was confused about this too thanks for making this thread0
    