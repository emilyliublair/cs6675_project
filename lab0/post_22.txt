Question: 
    Tests in Limits.c are dependent on each other$ limits 
Maximum Memory Size: 0x0000
Maximum Number of Files Per Directory: 0
Maximum Number of Processes: 0If you keep running malloc in limits, the OS will eventually run out of memory. Will this not affect the ability to later calculate the number of files per directory (since we are already out of memory), or are we expected to free all the memory we allocated in the first step before proceeding.lab0

    Student Answer: 
    

    Instructor Answer: 
    The buffers used for file I/O are statically allocated, so calculating the number of files per directory shouldn't involve any extra memory allocations, although allocating more processes will.If you calculate the maximum memory size first, then yes, you should free the memory before calculating the other limits. An easy way to do this is to fork, calculate the maximum memory size, and then exit the forked process, which will allow the kernel to reclaim all the memory it allocated.Another approach would be if using sbrk, xv6 allows you to deallocate memory by calling it with a negative value (take a look at xv6 manualCode: sbrkpg. 35).

    Followup Discussions:
    @41_f1Raymond Bian3 months agoAn easy way to do this is to fork, calculate the maximum memory size, and then exit the forked process, which will allow the kernel to reclaim all the memory it allocated.This will result in a “different” value compared to running the memory test individually, as the single fork allocation prevents one more allocation from being made. Would this be ok?An alternative solution if not using sbrk would be to calculate the limits on processes first, then calculate the limits on memory.0
    