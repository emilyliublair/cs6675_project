Question: 
    init.c fork() appears to return child to the start of init.c 'main()' instead of 'fork()' lineI have not been able to boot with COW. I have console prints that confirm that 3 pages are copied before a page fault with errno 5 (fault occured when reading kernel addr from user prg). The CR2 is all 'f' which causes problems a few problems. When I tried to check the tf->EIP and tf->pgdir it appears that code from the very start of init.c is causing the fault when trying to read from address 0xffffffff. Specifically in the mknod function is where things fail. The odd thing is that this is happening after fork() has run? I went to office hours today to try and get help but was told to make a piazza post. After troubleshooting with the TA we found I was not invalidating the parent pte in copyuvm. Invalidating the page here only changed what PID caused the identical fault. Originally it was doing this on pid 2, now it does this on pid 1(fork() has still run before faulting based on console). Specifically when I get the page fault the tf->eip == 18, and passing the pagdir and tf->eip into uva2ka() gives the address to a page containing init.asm. I have no idea what caused this, that pg invalidate was the only major error that the TA and I uncovered.edit: removing print statments for debugging from init fixed boot however I still get nearly identical behavior running forktest (only difference is the eip is 14 now). When trying to run anything in SH after boot I get a panic trying to acquire a spin-lock that is already held. From what I can tell it is not upset about the one I added. From some tracing it appears that the lock the kernel is panicing on is for the inode in gets>read>fileread.lab2

    Student Answer: 
    

    Instructor Answer: 
    

    Followup Discussions:
    
    